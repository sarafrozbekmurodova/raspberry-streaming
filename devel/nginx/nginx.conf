# sources:
#   https://nginx.org/en/docs/http/ngx_http_hls_module.html
#   https://github.com/SoloSynth1/nginx-hls-server
#   https://hlsbook.net/hls-nginx-rtmp-module/
#   https://flask.palletsprojects.com/en/stable/quickstart/
#   https://flask.palletsprojects.com/en/stable/deploying/nginx/
#   https://github.com/FiloSottile/mkcert
#   https://gist.github.com/mehmetsefabalik/257aab5a9ce69deb01f71d8b5be25256
#   https://nginx.org/en/docs/http/configuring_https_servers.html

server {
    listen 80;
    server_name local.pi-streamer.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /home/hardik/local.pi-streamer.com.pem;
    ssl_certificate_key /home/hardik/local.pi-streamer.com-key.pem;
    server_name local.pi-streamer.com;

    # below options are needed to handle big files
    client_max_body_size 2048M;
    client_body_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    proxy_read_timeout 300;

    # Serve files from /var/www/pi_streamer/media
    root /var/www/pi_streamer/media;
    index index.html;

    # Serve HLS segments under /hls/ (we will place playlist in /var/www/pi_streamer/media/hls/)
    location /hls/ {
        alias /var/www/pi_streamer/media/hls/;
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Range,Accept,Origin' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # quick CORS preflight handling
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # proxy /api to Flask
    location /api/ {
            proxy_pass http://127.0.0.1:8080/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # watch redirect/proxy
    location /watch/ {
            proxy_pass http://127.0.0.1:8080/watch/;
    }

    # ensure correct MIME types (usually already included)
    types {
        text/html html;
        text/css css;
        image/x-icon ico;
        application/javascript js mjs;
        application/vnd.apple.mpegurl m3u8;
        video/mp2t ts;
    }

    access_log /var/log/nginx/pi_streamer.access.log;
    error_log  /var/log/nginx/pi_streamer.error.log;
}
